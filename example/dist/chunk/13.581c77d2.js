webpackJsonp([13],{41:function(e,n,t){var a=React.createClass({displayName:"Example",formatUploadData:function(e){var n=(e||"").split(","),t=n[0].match(/data:image\/(.+);base64/);return{suffix:t[1],baseStr:n[1]}},checkImgSizeAndType:function(e,n){return/^(jpg|png|jpeg|bmp)$/gi.test(e.data.type.split("/")[1])?(e.data.size/1048576).toFixed(2)>n?(RUI.DialogManager.alert("上传图片大小只允许"+n+"M的图片!"),!1):!0:(RUI.DialogManager.alert("上传图片只允许JPEG、JPG、PNG、BMP格式的图片!"),!1)},uploadCheck:function(e){return this.checkImgSizeAndType(e,2)},formRules:function(){var e=this;return{activity:{required:!0,validator:{evt:{rules:{required:{msg:"活动名称不能为空"},filter:{reg:"name",msg:"活动名称格式不正确"},trigger:"onBlur|onChange",callback:function(e){return!0}}}}},time:{required:!0,validator:{start:{rules:{required:{msg:"请选择开始时间"},trigger:"onChange",callback:function(e){return!0}}},end:{rules:{required:{msg:"请选择结束时间"},trigger:"onChange",callback:function(n){var t=e.refs.form,a=t.getSingleFieldValue("start"),r=t.getSingleFieldValue("end");return a>r?(t.setFieldCheckStatus("end",{validateStatus:"is-error",explain:"结束时间不能小于开始时间"}),!1):!0}}}}},people:{required:!1,validator:{people:{rules:{}}}},plimit:{required:!1,validator:{limit:{rules:{trigger:"onChange",callback:function(n){var t=n.getValue();e.refs.form;return"1"==t?(e.setState({numberDisable:!0,number:""}),e.refs.form.setFieldCheckStatus("number",{validateStatus:"",explain:""})):e.setState({numberDisable:!1}),!0}}},number:{rules:{trigger:"onBlur|onChange",callback:function(n){var t=e.refs.form,a=t.getSingleFieldValue("limit");return"0"==a?/^[1-9]$/.test(n.getValue())?(t.setFieldCheckStatus("number",{validateStatus:"is-success",explain:""}),!0):(t.setFieldCheckStatus("number",{validateStatus:"is-error",explain:"1-9的数"}),!1):!0}}}}},rewardType:{required:!0,validator:{reward:{rules:{required:{msg:"请选择派奖方式"},trigger:"onBlur|onChange",callback:function(e){return!0}}}}},chance:{required:!1,validator:{chance:{rules:{filter:{reg:"number",msg:"机会只能为数字"},trigger:"onBlur|onChange",callback:function(e){return!0}}}}},cover:{required:!0,validator:{cover:{rules:{required:{msg:"图片不能为空"},callback:function(e){return!0}}}}},desc:{required:!0,validator:{desc:{rules:{required:{msg:"描述不能为空"},trigger:"onBlur|onChange",callback:function(e){return!0}}}}},descType:{required:!0,validator:{descType:{rules:{required:{msg:"请至少选择一个类型"},trigger:"onBlur|onChange",callback:function(e){return!0}}}}}}},componentDidMount:function(){this.refs.form.validateSingleField("evt")},getInitialState:function(){return{rules:this.formRules(),explain:this.props.explain,numberDisable:!0,number:"",list:[]}},doNumber:function(e){this.setState({number:e.target.value})},submitHandler:function(e,n){return console.dir(e),!1},complete:function(e,n){var t=this.refs.form,a=t.getSingleFieldValue("cover");a.length>0&&t.setFieldCheckStatus("cover",{validateStatus:"",explain:""})},disable:function(){},render:function(){var e=[{key:"请选择",value:0},{key:"管理员",value:1},{key:"编辑",value:2},{key:"审查",value:3}];return React.createElement("div",{className:"example-form"},React.createElement("h2",{className:"title"},"表单",React.createElement("span",null,"Form")),React.createElement("h3",{className:"sub-title"},"演示"),React.createElement("div",{className:"example"},React.createElement("h4",{className:"final-title"},"验证"),React.createElement("div",null,React.createElement(RUI.Form,{ref:"form",className:"horizonal",onSubmit:this.submitHandler,rules:this.state.rules},React.createElement(RUI.Form.Row,null,React.createElement("p",{style:{paddingBottom:"5px",fontSize:"16px",fontWeight:"bold",borderBottom:"1px dashed #dadada"}},"基本设置")),React.createElement("div",null,React.createElement(RUI.Form.Row,{label:"活动名称："},React.createElement(RUI.Form.Control,{rowType:"activity",name:"evt",type:"input",defaultValue:"sd",placeholder:"最多输入15个字"}))),React.createElement(RUI.Form.Row,{label:"活动时间："},React.createElement("div",null,React.createElement(RUI.Form.Control,{rowType:"time",name:"start",type:"datePicker"}),React.createElement("span",{className:"split"}),React.createElement(RUI.Form.Control,{rowType:"time",name:"end",type:"datePicker"}))),React.createElement(RUI.Form.Row,{label:"参与人数："},React.createElement(RUI.Form.Control,{rowType:"people",defaultValue:"1",name:"people",type:"radio"},React.createElement(RUI.Radio,{value:"1"},"隐藏"),React.createElement(RUI.Radio,{value:"0"},"显示"))),React.createElement(RUI.Form.Row,{label:"参与人数限制："},React.createElement(RUI.Form.Control,{rowType:"plimit",defaultValue:"1",name:"limit",type:"radio"},React.createElement(RUI.Radio,{value:"1"},"不限"),React.createElement(RUI.Radio,{value:"0"},"限制")),React.createElement(RUI.Form.Control,{rowType:"plimit",name:"number",type:"input",disable:this.state.numberDisable,placeholder:"请输入1-9的数",value:this.state.number,onChange:this.doNumber}),React.createElement("span",{className:"deco"},"人参与")),React.createElement(RUI.Form.Row,null,React.createElement("p",{style:{paddingBottom:"5px",fontSize:"16px",fontWeight:"bold",borderBottom:"1px dashed #dadada"}},"派奖方式")),React.createElement(RUI.Form.Row,{label:"派奖方式："},React.createElement(RUI.Form.Control,{rowType:"rewardType",name:"reward",className:"width_120",type:"select",stuff:!0,data:e}),React.createElement("span",{className:"deco grey"},"参与活动即可抽奖")),React.createElement(RUI.Form.Row,{label:"每日抽奖机会："},React.createElement("span",{className:"deco-l"},"每人每日有"),React.createElement(RUI.Form.Control,{rowType:"chance",className:"width_80",name:"chance",type:"input",placeholder:"请输入"}),React.createElement("span",{className:"deco"},"抽奖机会")),React.createElement(RUI.Form.Row,null,React.createElement("p",{style:{paddingBottom:"5px",fontSize:"16px",fontWeight:"bold",borderBottom:"1px dashed #dadada"}},"活动首页设置")),React.createElement(RUI.Form.Row,{label:"图片设置："},React.createElement(RUI.Form.Control,{rowType:"cover",name:"cover",type:"upload",multiple:!0,autoUpload:!0,beforeEdit:this.uploadCheck,action:"http://image.berbon.com/image/upload/base64zoom",actionData:this.formatUploadData,beforeEdit:this.uploadCheck,onUploadComplete:this.complete,editable:{aspectRatio:1},placeholder:"请上传图片",list:this.state.list})),React.createElement(RUI.Form.Row,null,React.createElement("p",{style:{paddingBottom:"5px",fontSize:"16px",fontWeight:"bold",borderBottom:"1px dashed #dadada"}},"文案描述")),React.createElement(RUI.Form.Row,{label:"文案描述："},React.createElement(RUI.Form.Control,{rowType:"desc",name:"desc",type:"textarea",placeholder:"文案描述",onChange:this.disable})),React.createElement(RUI.Form.Row,{label:"描述类型："},React.createElement(RUI.Form.Control,{rowType:"descType",name:"descType",type:"checkbox"},React.createElement(RUI.Checkbox,{value:"1",defaultSelected:0},"科技"),React.createElement(RUI.Checkbox,{value:"2",defaultSelected:0},"摄影"),React.createElement(RUI.Checkbox,{value:"3",defaultSelected:0},"旅游"),React.createElement(RUI.Checkbox,{value:"4",defaultSelected:0},"娱乐"))),React.createElement(RUI.Form.Row,null,React.createElement(RUI.Form.Submit,null,"保存"))))),React.createElement("h3",{className:"sub-title"},"源码"),React.createElement("div",{className:"source"},React.createElement("textarea",{defaultValue:t(94)})))}});e.exports=a},94:function(e,n){e.exports="var Example = React.createClass({\n    formatUploadData:function(file) {\n        var data = (file || \"\").split(',');\n        var suffix = data[0].match(/data:image\\/(.+);base64/);\n        return {\n            suffix:suffix[1],\n            baseStr:data[1]\n        };\n    },\n    checkImgSizeAndType : function(file, limit) {\n        if (!(/^(jpg|png|jpeg|bmp)$/gi.test(file.data.type.split('/')[1]))) {\n            RUI.DialogManager.alert(\"上传图片只允许JPEG、JPG、PNG、BMP格式的图片!\");\n            return false;\n        }\n        if((file.data.size/(1024*1024)).toFixed(2) > limit) {\n            RUI.DialogManager.alert('上传图片大小只允许'+limit+'M的图片!');\n            return false;\n        }\n        return true;\n    },\n    uploadCheck : function(e) {\n        return this.checkImgSizeAndType(e, 2);\n    },\n    formRules : function() {\n        var _this = this;\n        return {\n            activity : {\n                required : true,\n                validator : {\n                    'evt' : {\n                        rules: {\n                            required: {\n                                msg: '活动名称不能为空'\n                            },\n                            filter: {\n                                reg: 'name',//验证规则\n                                msg: '活动名称格式不正确'\n                            },\n                            trigger: 'onBlur|onChange',\n                            callback: function(rc) {\n                                //远程校验\n                               /* var form = _this.refs.form;\n                                $.ajax({\n                                    url:'http://shop.berbon.com/react-component/src/js/containers/form/remotes.json',\n                                    type:'get',\n                                    dataType : 'json',\n                                    data:{},\n                                    cache: false,\n                                    beforeSend : function() {\n                                        form.setFieldCheckStatus('evt',{\n                                            validateStatus : 'is-validating',\n                                            explain : ''\n                                        });\n                                    },\n                                    success:function(response) {\n                                        form.setFieldCheckStatus('evt',{\n                                            validateStatus : 'is-success',\n                                            explain : ''\n                                        });\n                                    },\n                                    error:function() {\n                                        form.setFieldCheckStatus('evt',{\n                                            validateStatus : 'is-error',\n                                            explain : '网络错误,请稍后再试！'\n                                        });\n                                    }\n                                });*/\n                                return true;\n                            }\n                        }\n                    }\n                }\n            },\n            time : {\n                required : true,\n                validator : {\n                    'start' : {\n                        rules: {\n                            required: {\n                                msg: '请选择开始时间'\n                            },\n                            trigger: 'onChange',\n                            callback: function(rc) {\n                                return true;\n                            }\n                        }\n                    },\n                    'end' :{\n                        rules: {\n                            required: {\n                                msg: '请选择结束时间'\n                            },\n                            trigger: 'onChange',\n                            callback: function(rc) {\n                                var form = _this.refs.form;\n                                var start = form.getSingleFieldValue('start');\n                                var end = form.getSingleFieldValue('end');\n                                if(start > end) {\n                                    form.setFieldCheckStatus('end',{\n                                        validateStatus : 'is-error',\n                                        explain : '结束时间不能小于开始时间'\n                                    });\n                                    return false;\n                                }\n                                return true;\n                            }\n                        }\n                    }\n                }\n            },\n            people : {\n                required : false,\n                validator : {\n                    'people' : {\n                        rules: {\n\n                        }\n                    }\n                }\n            },\n            plimit : {\n                required : false,\n                validator : {\n                    'limit' : {\n                        rules: {\n                            trigger: 'onChange',\n                            callback: function(rc) {\n                                var value = rc.getValue();\n                                var form = _this.refs.form;\n                                if(value == '1') {\n                                    _this.setState({\n                                        numberDisable : true,\n                                        number : ''\n                                    });\n                                    _this.refs.form.setFieldCheckStatus('number',{\n                                        validateStatus : '',\n                                        explain : ''\n                                    })\n                                }else {\n                                    _this.setState({\n                                        numberDisable : false\n                                    });\n                                }\n                                return true;\n                            }\n                        }\n                    },\n                    'number' : {\n                        rules: {\n                            trigger: 'onBlur|onChange',\n                            callback: function(rc) {\n                                var form = _this.refs.form;\n                                var limit = form.getSingleFieldValue('limit');\n                                if(limit == '0') {\n                                    if(/^[1-9]$/.test(rc.getValue())) {\n                                        form.setFieldCheckStatus('number',{\n                                            validateStatus : 'is-success',\n                                            explain : ''\n                                        });\n                                        return true;\n                                    }else {\n                                        form.setFieldCheckStatus('number',{\n                                            validateStatus : 'is-error',\n                                            explain : '1-9的数'\n                                        });\n                                        return false;\n                                    }\n                                }\n                                return true;\n                            }\n                        }\n                    }\n                }\n            },\n            rewardType : {\n                required : true,\n                validator : {\n                    'reward' : {\n                        rules: {\n                            required: {\n                                msg: '请选择派奖方式'\n                             },\n                            trigger: 'onBlur|onChange',\n                            callback: function(rc) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n            },\n            chance: {\n                required : false,\n                validator: {\n                    'chance' :{\n                        rules: {\n                            filter: {\n                                reg: 'number',\n                                msg: '机会只能为数字'\n                            },\n                            trigger: 'onBlur|onChange',\n                            callback: function(rc) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n            },\n            cover: {\n                required : true,\n                validator: {\n                    'cover' :{\n                        rules: {\n                            required: {\n                                msg: '图片不能为空'\n                            },\n                            callback: function(rc) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n            },\n            desc: {\n                required : true,\n                validator: {\n                    'desc' :{\n                        rules: {\n                            required: {\n                                msg: '描述不能为空'\n                            },\n                            trigger: 'onBlur|onChange',\n                            callback: function(rc) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n            },\n            descType: {\n                required : true,\n                validator: {\n                    'descType' :{\n                        rules: {\n                            required: {\n                                msg: '请至少选择一个类型'\n                            },\n                            trigger: 'onBlur|onChange',\n                            callback: function(rc) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    componentDidMount : function() {\n        //执行某项表单元校验\n        this.refs.form.validateSingleField('evt');\n    },\n    getInitialState : function() {\n        return {\n            rules : this.formRules(),\n            explain : this.props.explain,\n            numberDisable : true,\n            number : '',\n            list : []\n        }\n    },\n    doNumber : function(e){\n        this.setState({\n            number:e.target.value\n        });\n    },\n    submitHandler:function(data, form) {\n        //RUI.DialogManager.alert(JSON.stringify(data));\n        console.dir(data);\n        return false;\n    },\n    complete : function(res,s) {\n        var form = this.refs.form;\n        var uploadList = form.getSingleFieldValue('cover');\n        if(uploadList.length > 0) {\n            form.setFieldCheckStatus('cover',{\n                validateStatus : '',\n                explain : ''\n            });\n        }\n    },\n    disable : function() {\n        //console.log('自定义');\n    },\n    render:function() {\n        var selectData = [\n            { key:'请选择', value:0 },\n            { key:'管理员', value:1 },\n            { key:'编辑', value:2 },\n            { key:'审查', value:3 }\n        ];\n        return <div className=\"example-form\">\n            <h2 className=\"title\">表单<span>Form</span></h2>\n            <h3 className=\"sub-title\">演示</h3>\n            <div className=\"example\">\n                <h4 className=\"final-title\">验证</h4>\n                <div>\n                    <RUI.Form ref=\"form\" className=\"horizonal\" onSubmit={this.submitHandler} rules={this.state.rules}>\n                        <RUI.Form.Row>\n                            <p style={{paddingBottom:'5px',fontSize:'16px',fontWeight:'bold',borderBottom: \"1px dashed #dadada\"}}>基本设置</p>\n                        </RUI.Form.Row>\n                        {/*可以随意DOM元素*/}\n                       <div>\n                           <RUI.Form.Row label=\"活动名称：\" >\n                               <RUI.Form.Control\n                                   rowType=\"activity\"\n                                   name=\"evt\"\n                                   type=\"input\"\n                                   defaultValue=\"sd\"\n                                   placeholder=\"最多输入15个字\"\n                               />\n                           </RUI.Form.Row>\n                       </div>\n\n                        <RUI.Form.Row label=\"活动时间：\">\n                           <div>\n                               <RUI.Form.Control\n                                   rowType=\"time\"\n                                   name=\"start\"\n                                   type=\"datePicker\"\n                                />\n                               <span className=\"split\"></span>\n                               <RUI.Form.Control\n                                   rowType=\"time\"\n                                   name=\"end\"\n                                   type=\"datePicker\"\n                               >\n                               </RUI.Form.Control>\n                           </div>\n                        </RUI.Form.Row>\n\n                        <RUI.Form.Row label=\"参与人数：\">\n                            <RUI.Form.Control\n                                rowType=\"people\"\n                                defaultValue={\"1\"}\n                                name=\"people\"\n                                type=\"radio\">\n                                <RUI.Radio value=\"1\">隐藏</RUI.Radio>\n                                <RUI.Radio value=\"0\">显示</RUI.Radio>\n                            </RUI.Form.Control>\n                        </RUI.Form.Row>\n\n                        <RUI.Form.Row label=\"参与人数限制：\">\n                            <RUI.Form.Control\n                                rowType=\"plimit\"\n                                defaultValue={\"1\"}\n                                name=\"limit\"\n                                type=\"radio\">\n                                <RUI.Radio value=\"1\">不限</RUI.Radio>\n                                <RUI.Radio value=\"0\">限制</RUI.Radio>\n                            </RUI.Form.Control>\n                            <RUI.Form.Control\n                                rowType=\"plimit\"\n                                name=\"number\"\n                                type=\"input\"\n                                disable={this.state.numberDisable}\n                                placeholder=\"请输入1-9的数\"\n                                value={this.state.number}\n                                onChange={this.doNumber}\n\n                            />\n                            <span className=\"deco\">人参与</span>\n                        </RUI.Form.Row>\n                        <RUI.Form.Row>\n                            <p style={{paddingBottom:'5px',fontSize:'16px',fontWeight:'bold',borderBottom: \"1px dashed #dadada\"}}>派奖方式</p>\n                        </RUI.Form.Row>\n\n                        <RUI.Form.Row label=\"派奖方式：\">\n                            <RUI.Form.Control\n                                rowType=\"rewardType\"\n                                name=\"reward\"\n                                className=\"width_120\"\n                                type=\"select\"\n                                stuff={true}\n                                data={selectData}\n                            />\n                            <span className=\"deco grey\">参与活动即可抽奖</span>\n                        </RUI.Form.Row>\n\n                        <RUI.Form.Row label=\"每日抽奖机会：\">\n                            <span className=\"deco-l\">每人每日有</span>\n                            <RUI.Form.Control\n                                rowType=\"chance\"\n                                className=\"width_80\"\n                                name=\"chance\"\n                                type=\"input\"\n                                placeholder=\"请输入\"\n\n                            />\n                            <span className=\"deco\">抽奖机会</span>\n                        </RUI.Form.Row>\n\n                        <RUI.Form.Row>\n                            <p style={{paddingBottom:'5px',fontSize:'16px',fontWeight:'bold',borderBottom: \"1px dashed #dadada\"}}>活动首页设置</p>\n                        </RUI.Form.Row>\n\n                        <RUI.Form.Row label=\"图片设置：\">\n                            <RUI.Form.Control\n                                rowType=\"cover\"\n                                name=\"cover\"\n                                type=\"upload\"\n                                multiple={true}\n                                autoUpload={true}\n                                beforeEdit={this.uploadCheck}\n                                action=\"http://image.berbon.com/image/upload/base64zoom\"\n                                actionData={this.formatUploadData}\n                                beforeEdit={this.uploadCheck}\n                                onUploadComplete={this.complete}\n\n                                editable={{\n                                    aspectRatio:1\n                                }}\n                                placeholder=\"请上传图片\"\n                                list={this.state.list}\n                            />\n                        </RUI.Form.Row>\n                        <RUI.Form.Row>\n                            <p style={{paddingBottom:'5px',fontSize:'16px',fontWeight:'bold',borderBottom: \"1px dashed #dadada\"}}>文案描述</p>\n                        </RUI.Form.Row>\n\n                        <RUI.Form.Row label=\"文案描述：\">\n                            <RUI.Form.Control\n                                rowType=\"desc\"\n                                name=\"desc\"\n                                type=\"textarea\"\n                                placeholder=\"文案描述\"\n                                onChange={this.disable}\n                            />\n                        </RUI.Form.Row>\n\n                        <RUI.Form.Row label=\"描述类型：\">\n                            <RUI.Form.Control\n                                rowType=\"descType\"\n                                name=\"descType\"\n                                type=\"checkbox\">\n                                <RUI.Checkbox value=\"1\" defaultSelected={0}>科技</RUI.Checkbox>\n                                <RUI.Checkbox value=\"2\" defaultSelected={0}>摄影</RUI.Checkbox>\n                                <RUI.Checkbox value=\"3\" defaultSelected={0}>旅游</RUI.Checkbox>\n                                <RUI.Checkbox value=\"4\" defaultSelected={0}>娱乐</RUI.Checkbox>\n                            </RUI.Form.Control>\n                        </RUI.Form.Row>\n                        <RUI.Form.Row>\n                            <RUI.Form.Submit>保存</RUI.Form.Submit>\n                            {/*<RUI.Form.Reset>重置</RUI.Form.Reset>*/}\n                        </RUI.Form.Row>\n                    </RUI.Form>\n                </div>\n            </div>\n            <h3 className=\"sub-title\">源码</h3>\n            <div className=\"source\">\n                <textarea defaultValue={require('raw!./form.js')} />\n            </div>\n        </div>;\n    }\n});\n\nmodule.exports = Example;\n"}});